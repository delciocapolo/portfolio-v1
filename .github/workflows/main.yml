name: Continuous Integrations

on:
  push:
    branches:
      - main
jobs:
  build-and-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Git default branch to main
        run: git config --global init.defaultBranch main

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Compose and Install jq
        run: |
          sudo apt-get update && sudo apt-get install docker-compose -y && sudo apt-get install -y jq

      - name: Set Environment Variables
        run: |
          echo '${{ secrets.ENV_VARS }}' > env.json
          jq -r 'to_entries | .[] | "\(.key)=\(.value)"' env.json > .env

      - name: Build and Run Services
        run: |
          docker-compose -f compose.yaml up --build -d

      - name: Debug Container State
        run: docker ps

      - name: Debug Container frontend_portfolio_v1 Logs
        run: docker logs frontend_portfolio_v1

      - name: Wait for Angular App to Start
        run: |
          for i in {1..30}; do
            echo "Waiting for server to start... Attempt $i"
            curl -f http://localhost:4200 && break
            sleep 5
          done
          if [ "$i" -eq 30 ]; then
            echo "Server did not start in time"
            exit 1
          fi

      - name: Check Application Logs
        run: |
          docker-compose logs

      - name: Stop and Clean Services
        if: always()
        run: docker-compose down
